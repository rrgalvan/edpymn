int nIntervals = 40; // Number of intervals on each side of the boundary
mesh Th = square(nIntervals, nIntervals);  // Define a mesh of [0,1]^2
plot(Th, wait=1);
int[int] boundary=[1,2,3,4]; // Vector of ints (labels of the 4 edges of square)
fespace Vh(Th, P1); // Define P1 finite element space
Vh u, v; // Build two functions in this space (unknown and test function)
func f = 4; // Right hand side function
solve Dirichlet(u, v) =   // Define variational formulation
  int2d(Th) ( dx(u)*dx(v) + dy(u)*dy(v) )
  - int2d(Th) ( f*v )
  + on( boundary, u=0 ); // Dirichlet boundary condition
plot(u, dim=3, fill=true, value=true);  // Show results
